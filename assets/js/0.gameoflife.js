(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "../pkg/wasm_gameoflife.js":
/*!*********************************!*\
  !*** ../pkg/wasm_gameoflife.js ***!
  \*********************************/
/*! exports provided: Cell, Universe, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Cell\", function() { return Cell; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Universe\", function() { return Universe; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm_gameoflife_bg.wasm */ \"../pkg/wasm_gameoflife_bg.wasm\");\n\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory0 = new Uint8Array(_wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetInt32Memory0 = new Int32Array(_wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nconst Cell = Object.freeze({ Dead:0,Alive:1, });\n/**\n*/\nclass Universe {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Universe.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_universe_free\"](ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} height\n    * @returns {Universe}\n    */\n    static new(width, height) {\n        var ret = _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_new\"](width, height);\n        return Universe.__wrap(ret);\n    }\n    /**\n    * @returns {Universe}\n    */\n    static default() {\n        var ret = _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_default\"]();\n        return Universe.__wrap(ret);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {number}\n    */\n    get(x, y) {\n        var ret = _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_get\"](this.ptr, x, y);\n        return ret === 2 ? undefined : ret;\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    */\n    toggle(x, y) {\n        _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_toggle\"](this.ptr, x, y);\n    }\n    /**\n    * @param {number} x\n    * @param {number} y\n    * @returns {number}\n    */\n    alive_around(x, y) {\n        var ret = _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_alive_around\"](this.ptr, x, y);\n        return ret;\n    }\n    /**\n    */\n    tick() {\n        _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_tick\"](this.ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        var ret = _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_width\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    height() {\n        var ret = _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_height\"](this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    cells() {\n        var ret = _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_cells\"](this.ptr);\n        return ret;\n    }\n    /**\n    * @returns {string}\n    */\n    render() {\n        try {\n            _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"universe_render\"](8, this.ptr);\n            var r0 = getInt32Memory0()[8 / 4 + 0];\n            var r1 = getInt32Memory0()[8 / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            _wasm_gameoflife_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](r0, r1);\n        }\n    }\n}\n\nconst __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack:///../pkg/wasm_gameoflife.js?");

/***/ }),

/***/ "../pkg/wasm_gameoflife_bg.wasm":
/*!**************************************!*\
  !*** ../pkg/wasm_gameoflife_bg.wasm ***!
  \**************************************/
/*! exports provided: memory, __wbg_universe_free, universe_new, universe_default, universe_get, universe_toggle, universe_alive_around, universe_tick, universe_width, universe_height, universe_cells, universe_render, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./wasm_gameoflife.js */ \"../pkg/wasm_gameoflife.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/wasm_gameoflife_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var wasm_gameoflife__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasm-gameoflife */ \"../pkg/wasm_gameoflife.js\");\n/* harmony import */ var wasm_gameoflife_wasm_gameoflife_bg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wasm-gameoflife/wasm_gameoflife_bg */ \"../pkg/wasm_gameoflife_bg.wasm\");\n\n\n\nconst CELL_SIZE = 10; // px\nconst GRID_COLOR = \"#CCCCCC\";\nconst DEAD_COLOR = \"#FFFFFF\";\nconst ALIVE_COLOR = \"#000000\";\n\nlet canvas = document.getElementById('gol-canvas');\nlet uni;\nlet width;\nlet height;\nlet cells;\nlet targFps = 10;\n\nconst initUni = (newuni) => {\n    uni = newuni;\n    width = uni.width();\n    height = uni.height();\n    cells = uni.cells();\n\n    canvas.width = (CELL_SIZE + 1) * width + 1;\n    canvas.height = (CELL_SIZE + 1) * height + 1;\n}\n\ninitUni(wasm_gameoflife__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].default());\n\nconst ctx = canvas.getContext('2d');\n\nconst getIndex = (x, y) => y * width + x;\n\nconst drawGrid = () => {\n    ctx.beginPath();\n    ctx.strokeStyle = GRID_COLOR;\n\n    for (let i = 0; i <= width; i++) {\n        ctx.moveTo(i * (CELL_SIZE + 1) + 1, 0);\n        ctx.lineTo(i * (CELL_SIZE + 1) + 1, (CELL_SIZE + 1) * height + 1);\n    }\n    for (let j = 0; j <= height; j++) {\n        ctx.moveTo(0,                           j * (CELL_SIZE + 1) + 1);\n        ctx.lineTo((CELL_SIZE + 1) * width + 1, j * (CELL_SIZE + 1) + 1);\n    }\n\n    ctx.stroke();\n}\n\nconst drawCells = () => {\n    const cellsPtr = uni.cells();\n    const cells = new Uint8Array(wasm_gameoflife_wasm_gameoflife_bg__WEBPACK_IMPORTED_MODULE_1__[\"memory\"].buffer, cellsPtr, width * height / 8 + 1);\n\n    ctx.beginPath();\n\n    ctx.fillStyle = DEAD_COLOR;\n    ctx.fillRect(0, 0, width * (CELL_SIZE + 1) + 1, height * (CELL_SIZE + 1) + 1);\n    ctx.fillStyle = ALIVE_COLOR;\n    for (let x = 0; x < width; x++) {\n        for (let y = 0; y < height; y++) {\n            const idx = getIndex(x, y);\n            if ((cells[Math.floor(idx / 8)] & (1 << (idx % 8))) != 0) {\n                ctx.fillRect(\n                    x * (CELL_SIZE + 1) + 1,\n                    y * (CELL_SIZE + 1) + 1,\n                    CELL_SIZE,\n                    CELL_SIZE\n                );\n            }\n        }\n    }\n\n    ctx.stroke();\n}\n\nlet dragging = false;\nlet lastX = -1;\nlet lastY = -1;\n\nconst toggleCell = ({offsetX, offsetY}) => {\n    const x = Math.floor(offsetX / (CELL_SIZE + 1));\n    const y = Math.floor(offsetY / (CELL_SIZE + 1));\n    uni.toggle(x, y);\n    drawCells();\n    drawGrid();\n}\n\nconst setLast = ({offsetX, offsetY}) => {\n    const x = Math.floor(offsetX / (CELL_SIZE + 1));\n    const y = Math.floor(offsetY / (CELL_SIZE + 1));\n    if (x != lastX || y != lastY) {\n        lastX = x;\n        lastY = y;\n        return true;\n    }\n    return false;\n}\n\ncanvas.onclick = toggleCell;\n\ncanvas.onmousedown = () => {dragging = true;}\ncanvas.onmouseup = () => {setLast(-1, -1); dragging = false;}\ncanvas.onmouseleave = () => {setLast(-1, -1); dragging = false;}\ncanvas.onmousemove = (e) => {\n    if (dragging && setLast(e)) {\n        toggleCell(e);\n    }\n}\n\nlet prev = 0;\nlet animId = null;\nlet perfPrev = 0;\n\nconst renderLoop = (ts) => {\n    if (ts - prev > 1000 / targFps) {\n        const perf = performance.now();\n        const fps = 1000 / (perf - perfPrev);\n        perfPrev = perf;\n        document.getElementById('fps').innerText = Math.floor(fps).toString().padStart(2, '0');\n        prev = ts;\n        drawCells();\n        drawGrid();\n        uni.tick();\n    }\n    animId = requestAnimationFrame(renderLoop);\n}\n\nconst pause = () => {\n    if (animId === null) {\n        requestAnimationFrame(renderLoop);\n    } else {\n        cancelAnimationFrame(animId);\n        animId = null;\n    }\n}\n\nconst step = () => {\n    uni.tick();\n    drawCells();\n    drawGrid();\n}\n\nconst cleargol = () => {\n    initUni(wasm_gameoflife__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].new(64, 64));\n    drawCells();\n    drawGrid();\n}\n\nconst randomgol = () => {\n    initUni(wasm_gameoflife__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].new(64, 64));\n    for (var x = 0; x < width; x++)\n        for (var y = 0; y < width; y++)\n            if (Math.random() < 0.5)\n                uni.toggle(x, y);\n    drawCells();\n    drawGrid();\n}\n\nconst defaultgol = () => {\n    initUni(wasm_gameoflife__WEBPACK_IMPORTED_MODULE_0__[\"Universe\"].default());\n    drawCells();\n    drawGrid();\n}\n\ndocument.getElementById('pause').onclick = pause;\ndocument.getElementById('step').onclick = step;\ndocument.getElementById('clear').onclick = cleargol;\ndocument.getElementById('random').onclick = randomgol;\ndocument.getElementById('default').onclick = defaultgol;\n\ndocument.getElementById('range').onchange = (e) => {\n    targFps = e.target.value;\n}\n\ndrawCells();\ndrawGrid();\n\n// requestAnimationFrame(renderLoop);\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);